#version 460

#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_ray_query : enable
#extension GL_GOOGLE_include_directive : enable

#include "../../src/glsl_cpp_common.h"


// Output storage image
layout(std140, binding = b_triangles) readonly buffer TriangleSSBOIn {
   RTTriangle trianglesIn [ ];
};

layout(std430, binding = b_triangles_idx) readonly buffer TriangleIdxSSBOIn {
   uint trianglesIdxIn [ ];
};

// BVH nodes
layout(std140, binding = b_bvhnodes) buffer BVHNodesSSBOOut {
   BVHNode bvhNodesOut [ ];
};

uint randInt(inout uint seed) {
    seed = seed * 747796405 + 2891336453;
    uint result = ((seed >> ((seed >> 28) + 4)) ^ seed) * 277803737;
    result = (result >> 22) ^ result;
    return result;
}

uint collatz(uint start) {
	uint i = start;
	while (i > 1) {
		if (i % 2 == 0) i = i / 2;
		else i = i * 3 + 1;
	}
	return i;
}

// --- Program ---
layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main() {
	int id = int(gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * 600);

	uint j = 0;
	uint seed = uint(id);
	
	uint lf = bvhNodesOut[0].leftFirst;
	for (int i = 0; i < 1000; i++){
		uint c = collatz(randInt(seed));
		j += c;
		lf -= c;
	}

	lf += j;
	//bvhNodesOut[0].leftFirst = lf;
}